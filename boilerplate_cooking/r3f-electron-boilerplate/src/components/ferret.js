/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import path from 'path';
import isDev from 'electron-is-dev';
import React, { useRef ,useEffect ,useMemo } from 'react'
import { useGraph, useFrame } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import * as THREE from 'three'
import { SkeletonUtils } from "three/examples/jsm/utils/SkeletonUtils"

export default function Model(props) {
  const group = useRef()
  const { scene, materials, animations } = useGLTF((isDev?'http://localhost:8082':path.resolve('.'))+'/assets/3d/ferret.glb','draco-gltf')
  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes } = useGraph(clone)
  const { actions } = useAnimations(animations, group)
  
   useFrame((state,delta)=>{
  	group.current.translateZ(-0.02);
	});
  
  useEffect(()=>{
		// console.log(actions);
		actions.Walk?.play();
		
		// console.log(actions.Walk);
		
		// return actions.Walk?.reset();
		// return actions.Run1?.reset();
		// return actions.Wait?.reset();
  })
  
  useEffect(()=>{
	const directionInterval = setInterval(()=>group.current.lookAt(new THREE.Vector3(Math.floor(Math.random()*(Math.round(Math.random())?2500:-2500)),4.4,Math.floor(Math.random()*(Math.round(Math.random())?2500:-2500)))),1000*Math.floor(Math.random()*120));
	return ()=>clearInterval(directionInterval);
  })
  
  return (
    <group ref={group} {...props} dispose={null} scale={[0.12,0.12,0.12]}>
      <group position={[-0.16, 4.4, 2.64]} rotation={[1.59, 0, 0]}>
        <primitive object={nodes.Bone} />
        <skinnedMesh
          geometry={nodes.Cube001.geometry}
          material={materials['Material.001']}
          skeleton={nodes.Cube001.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Cube001_1.geometry}
          material={materials['Material.002']}
          skeleton={nodes.Cube001_1.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Cube001_2.geometry}
          material={materials['Material.003']}
          skeleton={nodes.Cube001_2.skeleton}
        />
      </group>
    </group>
  )
}

useGLTF.preload((isDev?'http://localhost:8082':path.resolve('.'))+'/assets/3d/ferret.glb')
